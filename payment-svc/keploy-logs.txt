üê∞ Keploy: 2025-03-03T22:08:29+05:30 	[34mINFO[0m	Starting keploy in docker with image	{"image:": "ghcr.io/keploy/keploy:v2.4.5"}
üê∞ Keploy: 2025-03-03T22:08:29+05:30 	[34mINFO[0m	Starting keploy in docker with default context, as that is the current context.
üê∞ Keploy: 2025-03-03T16:38:29Z 	[34mINFO[0m	detected that Keploy is running in a docker container
üê∞ Keploy: 2025-03-03T16:38:29Z 	[34mINFO[0m	trying to inject network:keploy-network to the keploy container
üê∞ Keploy: 2025-03-03T16:38:29Z 	[34mINFO[0m	Successfully injected network to the keploy container	{"Keploy container": "keploy-v2", "appNetwork": "keploy-network", "keploy container ip": "172.19.0.2"}
üê∞ Keploy: 2025-03-03T16:38:29Z 	[34mINFO[0m	keploy initialized and probes added to the kernel.
üê∞ Keploy: 2025-03-03T16:38:30Z 	[34mINFO[0m	starting UDP DNS server at addr :26789
üê∞ Keploy: 2025-03-03T16:38:30Z 	[34mINFO[0m	Keploy has taken control of the DNS resolution mechanism, your application may misbehave if you have provided wrong domain name in your application code.
üê∞ Keploy: 2025-03-03T16:38:30Z 	[34mINFO[0m	Proxy started at port:16789
üê∞ Keploy: 2025-03-03T16:38:30Z 	[34mINFO[0m	starting TCP DNS server at addr :26789
üê∞ Keploy: 2025-03-03T16:39:27Z 	[31mERROR[0m	failed to complete TLS handshake with the client	{"error": "remote error: tls: bad certificate"}
üê∞ Keploy: 2025-03-03T16:39:27Z 	[31mERROR[0m	failed to handle TLS conn	{"error": "remote error: tls: bad certificate"}
üê∞ Keploy: 2025-03-03T16:39:27Z 	[31mERROR[0m	Recovered from panic in parser, closing active connections
üê∞ Keploy: 2025-03-03T16:39:27Z 	[31mERROR[0m	Recovered from panic	{"stack trace": "goroutine 31 [running]:\nruntime/debug.Stack()\n\t/usr/local/go/src/runtime/debug/stack.go:24 +0x64\ngo.keploy.io/server/v2/utils.HandleRecovery(0x40003ba000, {0x11510e0, 0x22457f0}, {0x136acd0, 0x14})\n\t/app/utils/utils.go:320 +0xf0\ngo.keploy.io/server/v2/pkg/core/proxy/util.Recover(0x40003ba000, {0x16fb6d8, 0x4000662c88}, {0x0, 0x0})\n\t/app/pkg/core/proxy/util/util.go:560 +0x180\npanic({0x11510e0?, 0x22457f0?})\n\t/usr/local/go/src/runtime/panic.go:770 +0x124\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).handleConnection.func2()\n\t/app/pkg/core/proxy/proxy.go:338 +0x64\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).handleConnection(0x4000669860, {0x16f4970, 0x4002b13ae0}, {0x0, 0x0})\n\t/app/pkg/core/proxy/proxy.go:442 +0x20c8\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).start.func4()\n\t/app/pkg/core/proxy/proxy.go:266 +0x78\ngolang.org/x/sync/errgroup.(*Group).Go.func1()\n\t/go/pkg/mod/golang.org/x/sync@v0.7.0/errgroup/errgroup.go:78 +0x58\ncreated by golang.org/x/sync/errgroup.(*Group).Go in goroutine 16\n\t/go/pkg/mod/golang.org/x/sync@v0.7.0/errgroup/errgroup.go:75 +0x98\n"}
üê∞ Keploy: 2025-03-03T16:39:28Z 	[31mERROR[0m	failed to complete TLS handshake with the client	{"error": "remote error: tls: bad certificate"}
üê∞ Keploy: 2025-03-03T16:39:28Z 	[31mERROR[0m	failed to handle TLS conn	{"error": "remote error: tls: bad certificate"}
üê∞ Keploy: 2025-03-03T16:39:28Z 	[31mERROR[0m	Recovered from panic in parser, closing active connections
üê∞ Keploy: 2025-03-03T16:39:28Z 	[31mERROR[0m	Recovered from panic	{"stack trace": "goroutine 55 [running]:\nruntime/debug.Stack()\n\t/usr/local/go/src/runtime/debug/stack.go:24 +0x64\ngo.keploy.io/server/v2/utils.HandleRecovery(0x40003ba000, {0x11510e0, 0x22457f0}, {0x136acd0, 0x14})\n\t/app/utils/utils.go:320 +0xf0\ngo.keploy.io/server/v2/pkg/core/proxy/util.Recover(0x40003ba000, {0x16fb6d8, 0x4000124248}, {0x0, 0x0})\n\t/app/pkg/core/proxy/util/util.go:560 +0x180\npanic({0x11510e0?, 0x22457f0?})\n\t/usr/local/go/src/runtime/panic.go:770 +0x124\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).handleConnection.func2()\n\t/app/pkg/core/proxy/proxy.go:338 +0x64\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).handleConnection(0x4000669860, {0x16f4970, 0x4002b13ae0}, {0x0, 0x0})\n\t/app/pkg/core/proxy/proxy.go:442 +0x20c8\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).start.func4()\n\t/app/pkg/core/proxy/proxy.go:266 +0x78\ngolang.org/x/sync/errgroup.(*Group).Go.func1()\n\t/go/pkg/mod/golang.org/x/sync@v0.7.0/errgroup/errgroup.go:78 +0x58\ncreated by golang.org/x/sync/errgroup.(*Group).Go in goroutine 16\n\t/go/pkg/mod/golang.org/x/sync@v0.7.0/errgroup/errgroup.go:75 +0x98\n"}
üê∞ Keploy: 2025-03-03T16:39:29Z 	[31mERROR[0m	failed to complete TLS handshake with the client	{"error": "remote error: tls: bad certificate"}
üê∞ Keploy: 2025-03-03T16:39:29Z 	[31mERROR[0m	failed to handle TLS conn	{"error": "remote error: tls: bad certificate"}
üê∞ Keploy: 2025-03-03T16:39:29Z 	[31mERROR[0m	Recovered from panic in parser, closing active connections
üê∞ Keploy: 2025-03-03T16:39:29Z 	[31mERROR[0m	Recovered from panic	{"stack trace": "goroutine 92 [running]:\nruntime/debug.Stack()\n\t/usr/local/go/src/runtime/debug/stack.go:24 +0x64\ngo.keploy.io/server/v2/utils.HandleRecovery(0x40003ba000, {0x11510e0, 0x22457f0}, {0x136acd0, 0x14})\n\t/app/utils/utils.go:320 +0xf0\ngo.keploy.io/server/v2/pkg/core/proxy/util.Recover(0x40003ba000, {0x16fb6d8, 0x400019a668}, {0x0, 0x0})\n\t/app/pkg/core/proxy/util/util.go:560 +0x180\npanic({0x11510e0?, 0x22457f0?})\n\t/usr/local/go/src/runtime/panic.go:770 +0x124\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).handleConnection.func2()\n\t/app/pkg/core/proxy/proxy.go:338 +0x64\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).handleConnection(0x4000669860, {0x16f4970, 0x4002b13ae0}, {0x0, 0x0})\n\t/app/pkg/core/proxy/proxy.go:442 +0x20c8\ngo.keploy.io/server/v2/pkg/core/proxy.(*Proxy).start.func4()\n\t/app/pkg/core/proxy/proxy.go:266 +0x78\ngolang.org/x/sync/errgroup.(*Group).Go.func1()\n\t/go/pkg/mod/golang.org/x/sync@v0.7.0/errgroup/errgroup.go:78 +0x58\ncreated by golang.org/x/sync/errgroup.(*Group).Go in goroutine 16\n\t/go/pkg/mod/golang.org/x/sync@v0.7.0/errgroup/errgroup.go:75 +0x98\n"}
üê∞ Keploy: 2025-03-03T16:39:31Z 	[34mINFO[0m	üü† Keploy has captured test cases for the user's application.	{"path": "/Users/harshsharma/Desktop/kep/Keploy-Contract/payment-svc/keploy/test-set-0/tests", "testcase name": "test-1"}
